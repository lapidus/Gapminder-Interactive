package org.gapminder {		import com.greensock.TweenMax;
	
	import flash.display.Sprite;
	import flash.text.TextField;
	
	import mx.controls.Text;
		public class QuestionPair extends QuestionPair_design {				public var _alt1:TextField;		public var _alt2:TextField;		public var _column1:Sprite;		public var _column2:Sprite;		public var _percent1:TextField;		public var _percent2:TextField;		public var _alternatives:Sprite;		public var _or:TextField;			public var originalY:Number;				public function QuestionPair(alt1_text:String, alt2_text:String) {								//Stage instances			_column1 = this.result1.column;			_column2 = this.result2.column;						_alt1 = this.alt1;			_alt2 = this.alt2;						_percent1 = this.result1.percent;			_percent2 = this.result2.percent;						_alternatives = this.alternatives;			_or = this.orText;						//Set Defaults				_alt1.text = alt1_text;			_alt2.text = alt2_text;									_column1.scaleY = 0.00;			_column2.scaleY = 0.00;			_or.visible = false;						_alt1.textColor = 0xcccccc;			_alt2.textColor = 0xcccccc;						_column1.visible = false;			_column2.visible = false;						_percent1.visible = true;			_percent2.visible = true;						_alternatives.visible = false;					}				public function setState(state:String){					switch(state){						case "inactive":										break;						case "active":								//_or.visible = true;								_alt1.textColor = 0x000000;				_alt2.textColor = 0x000000;								_column1.visible = false;				_column2.visible = false;								_percent1.visible = true;				_percent2.visible = true;								_alternatives.visible = true;								break;							case "done":								_alt1.textColor = 0x000000;				_alt2.textColor = 0x000000;								_column1.visible = false;				_column2.visible = false;								_percent1.visible = true;				_percent2.visible = true;								_alternatives.visible = false;								break;							}						}				public function tweenToActive() {					var objectsToTween:Array = [_column1, _column2, _percent1, _percent2, alternatives, _or];						_alt1.textColor = 0x000000;			_alt2.textColor = 0x000000;			TweenMax.to(this,0.4,{y:280, scaleX:1, scaleY:1, alpha:1});			TweenMax.allTo(objectsToTween,0.5,{autoAlpha:1, delay:0.5});		}				public function tweenBack() {						var objectsToTween:Array = [_column1, _column2, alternatives, _or];						TweenMax.allTo(objectsToTween,0.2,{autoAlpha:0});			TweenMax.to(this,0.3,{y:this.originalY, scaleX:0.8, scaleY:0.8, delay: 0.5});								}						public function update(percentageAlt1:Number, percentageAlt2:Number){					_or.visible = false;						_column1.visible = true;			_column2.visible = true;						TweenMax.to(_column1, 0.1, {scaleY: percentageAlt1});			TweenMax.to(_column2, 0.1, {scaleY: percentageAlt2});						_percent1.text = (Math.round(percentageAlt1*100)).toString() + "%";			_percent2.text = (Math.round(percentageAlt2*100)).toString() + "%";		}						public function showResult(percentageAlt1:Number) {		/*			_column.visible = true;			_column.visible = true;			TweenMax.to(_column1,0.2,{width: percentageAlt1*100});			TweenMax.to(_olumn,0.2,{width: (1-percentageAlt1)*100, x: -((1-percentageAlt1)*100)});						/*			_questionPairs[_activeQuestion].alt1percent.text = (percentageAlt1*100).toString() + "%";			_questionPairs[_activeQuestion].alt2percent.text = ((1-percentageAlt1)*100).toString() + "%";						_questionPairs[_activeQuestion].alt1percent.visible = true;			_questionPairs[_activeQuestion].alt2percent.visible = true;		*/		}			}	}